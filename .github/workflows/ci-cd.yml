name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb1 libxkbcommon-x11-0 libgl1-mesa-glx xvfb
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-qt
    
    - name: Run tests
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 &
        sleep 2
        pytest tests/ -v
      env:
        QT_QPA_PLATFORM: xcb

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy
    
    - name: Run Black
      run: black --check .
    
    - name: Run flake8
      run: flake8 .
    
    - name: Run isort
      run: isort --check-only .

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create distribution package
      run: |
        pip install build
        python -m build
    
    - name: Validate build
      run: |
        echo "âœ… Build completed successfully"
        ls -la dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "âœ… Ready for deployment"
        echo "ðŸ“¦ Application validated and tested"
        # Add your deployment script here
